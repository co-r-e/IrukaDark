name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-macos:
    name: macOS build (arm64 dmg)
    runs-on: macos-14
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: 'false'
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate icons (icns/ico/png)
        run: npm run icons

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/electron
            ~/Library/Caches/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}

      - name: Build & publish macOS (arm64)
        run: npx electron-builder -m --arm64 --publish always

      - name: Generate checksums
        run: npm run checksums

      - name: Upload dist artifacts (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: dist-mac
          path: dist/**

  build-windows:
    name: Windows build (x64 exe)
    runs-on: windows-latest
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: 'false'
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate icons (icns/ico/png)
        run: npm run icons

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\electron\Cache
            ~\AppData\Local\electron-builder\Cache
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}

      - name: Build & publish Windows (NSIS x64)
        run: npx electron-builder -w --x64 --publish always

      - name: Generate checksums
        run: npm run checksums

      - name: Upload dist artifacts (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows
          path: dist/**

  build-linux:
    name: Linux build (x64 AppImage)
    runs-on: ubuntu-latest
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: 'false'
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate icons (icns/ico/png)
        run: npm run icons

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}

      - name: Build & publish Linux (AppImage + deb x64)
        run: npx electron-builder -l --x64 --publish always

      - name: Generate checksums
        run: npm run checksums

      - name: Upload dist artifacts (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: dist-linux
          path: dist/**

  draft-release:
    name: Draft GitHub Release
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, build-linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Setup Node.js (for checksum script)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate combined checksums
        run: node scripts/generate-checksums.js

      - name: List files to be released
        run: |
          echo "Files in dist/:"
          ls -R dist

      - name: Upload checksum assets to existing release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: false
          tag_name: ${{ github.ref_name }}
          append_body: true
          files: |
            dist/SHA256SUMS.txt
            dist/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
